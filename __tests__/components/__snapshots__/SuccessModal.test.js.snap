// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuccessModal renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SuccessModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="modal-container"
        style={
          Object {
            "height": 200,
          }
        }
      >
        <Modal
          animation={true}
          aria-labelledby="contained-modal-title"
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          container={
            SuccessModal {
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "setState": [Function],
              "state": null,
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_element": <SuccessModal />,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_newState": null,
                  "_rendered": <div>
                    <div
                      className="modal-container"
                      style={
                        Object {
                          "height": 200,
                        }
                      }
                    >
                      <Modal
                        animation={true}
                        aria-labelledby="contained-modal-title"
                        autoFocus={true}
                        backdrop={true}
                        bsClass="modal"
                        container={[Circular]}
                        dialogComponentClass={[Function]}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                      >
                        <ModalHeader
                          bsClass="modal-header"
                          closeButton={true}
                          closeLabel="Close"
                        >
                          <ModalTitle
                            bsClass="modal-title"
                            componentClass="h4"
                            id="contained-modal-title"
                          >
                            Parabéns!!!
                          </ModalTitle>
                        </ModalHeader>
                        <ModalBody
                          bsClass="modal-body"
                          componentClass="div"
                        />
                        <ModalFooter
                          bsClass="modal-footer"
                          componentClass="div"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                          >
                            Close
                          </Button>
                        </ModalFooter>
                      </Modal>
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                },
              },
              Symbol(enzyme.__setState__): [Function],
            }
          }
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        >
          <ModalHeader
            bsClass="modal-header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
              id="contained-modal-title"
            >
              Parabéns!!!
            </ModalTitle>
          </ModalHeader>
          <ModalBody
            bsClass="modal-body"
            componentClass="div"
          />
          <ModalFooter
            bsClass="modal-footer"
            componentClass="div"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
            >
              Close
            </Button>
          </ModalFooter>
        </Modal>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          animation={true}
          aria-labelledby="contained-modal-title"
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          container={
            SuccessModal {
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "setState": [Function],
              "state": null,
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_element": <SuccessModal />,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_newState": null,
                  "_rendered": <div>
                    <div
                      className="modal-container"
                      style={
                        Object {
                          "height": 200,
                        }
                      }
                    >
                      <Modal
                        animation={true}
                        aria-labelledby="contained-modal-title"
                        autoFocus={true}
                        backdrop={true}
                        bsClass="modal"
                        container={[Circular]}
                        dialogComponentClass={[Function]}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                      >
                        <ModalHeader
                          bsClass="modal-header"
                          closeButton={true}
                          closeLabel="Close"
                        >
                          <ModalTitle
                            bsClass="modal-title"
                            componentClass="h4"
                            id="contained-modal-title"
                          >
                            Parabéns!!!
                          </ModalTitle>
                        </ModalHeader>
                        <ModalBody
                          bsClass="modal-body"
                          componentClass="div"
                        />
                        <ModalFooter
                          bsClass="modal-footer"
                          componentClass="div"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                          >
                            Close
                          </Button>
                        </ModalFooter>
                      </Modal>
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                },
              },
              Symbol(enzyme.__setState__): [Function],
            }
          }
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        >
          <ModalHeader
            bsClass="modal-header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              componentClass="h4"
              id="contained-modal-title"
            >
              Parabéns!!!
            </ModalTitle>
          </ModalHeader>
          <ModalBody
            bsClass="modal-body"
            componentClass="div"
          />
          <ModalFooter
            bsClass="modal-footer"
            componentClass="div"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
            >
              Close
            </Button>
          </ModalFooter>
        </Modal>,
        "className": "modal-container",
        "style": Object {
          "height": 200,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "aria-labelledby": "contained-modal-title",
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "children": Array [
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
                id="contained-modal-title"
              >
                Parabéns!!!
              </ModalTitle>
            </ModalHeader>,
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            />,
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
              >
                Close
              </Button>
            </ModalFooter>,
          ],
          "container": SuccessModal {
            "context": Object {},
            "props": Object {},
            "refs": Object {},
            "setState": [Function],
            "state": null,
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_element": <SuccessModal />,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_newState": null,
                "_rendered": <div>
                  <div
                    className="modal-container"
                    style={
                      Object {
                        "height": 200,
                      }
                    }
                  >
                    <Modal
                      animation={true}
                      aria-labelledby="contained-modal-title"
                      autoFocus={true}
                      backdrop={true}
                      bsClass="modal"
                      container={[Circular]}
                      dialogComponentClass={[Function]}
                      enforceFocus={true}
                      keyboard={true}
                      manager={
                        ModalManager {
                          "add": [Function],
                          "containers": Array [],
                          "data": Array [],
                          "handleContainerOverflow": true,
                          "hideSiblingNodes": true,
                          "isTopModal": [Function],
                          "modals": Array [],
                          "remove": [Function],
                        }
                      }
                      onHide={[Function]}
                      renderBackdrop={[Function]}
                      restoreFocus={true}
                      show={false}
                    >
                      <ModalHeader
                        bsClass="modal-header"
                        closeButton={true}
                        closeLabel="Close"
                      >
                        <ModalTitle
                          bsClass="modal-title"
                          componentClass="h4"
                          id="contained-modal-title"
                        >
                          Parabéns!!!
                        </ModalTitle>
                      </ModalHeader>
                      <ModalBody
                        bsClass="modal-body"
                        componentClass="div"
                      />
                      <ModalFooter
                        bsClass="modal-footer"
                        componentClass="div"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          disabled={false}
                        >
                          Close
                        </Button>
                      </ModalFooter>
                    </Modal>
                  </div>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
              },
            },
            Symbol(enzyme.__setState__): [Function],
          },
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [Function],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-header",
              "children": <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
                id="contained-modal-title"
              >
                Parabéns!!!
              </ModalTitle>,
              "closeButton": true,
              "closeLabel": "Close",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-title",
                "children": "Parabéns!!!",
                "componentClass": "h4",
                "id": "contained-modal-title",
              },
              "ref": null,
              "rendered": "Parabéns!!!",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-body",
              "children": undefined,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-footer",
              "children": <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
              >
                Close
              </Button>,
              "componentClass": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsStyle": "default",
                "children": "Close",
                "disabled": false,
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "Close",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal-container"
          style={
            Object {
              "height": 200,
            }
          }
        >
          <Modal
            animation={true}
            aria-labelledby="contained-modal-title"
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            container={
              SuccessModal {
                "context": Object {},
                "props": Object {},
                "refs": Object {},
                "setState": [Function],
                "state": null,
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_element": <SuccessModal />,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_newState": null,
                    "_rendered": <div>
                      <div
                        className="modal-container"
                        style={
                          Object {
                            "height": 200,
                          }
                        }
                      >
                        <Modal
                          animation={true}
                          aria-labelledby="contained-modal-title"
                          autoFocus={true}
                          backdrop={true}
                          bsClass="modal"
                          container={[Circular]}
                          dialogComponentClass={[Function]}
                          enforceFocus={true}
                          keyboard={true}
                          manager={
                            ModalManager {
                              "add": [Function],
                              "containers": Array [],
                              "data": Array [],
                              "handleContainerOverflow": true,
                              "hideSiblingNodes": true,
                              "isTopModal": [Function],
                              "modals": Array [],
                              "remove": [Function],
                            }
                          }
                          onHide={[Function]}
                          renderBackdrop={[Function]}
                          restoreFocus={true}
                          show={false}
                        >
                          <ModalHeader
                            bsClass="modal-header"
                            closeButton={true}
                            closeLabel="Close"
                          >
                            <ModalTitle
                              bsClass="modal-title"
                              componentClass="h4"
                              id="contained-modal-title"
                            >
                              Parabéns!!!
                            </ModalTitle>
                          </ModalHeader>
                          <ModalBody
                            bsClass="modal-body"
                            componentClass="div"
                          />
                          <ModalFooter
                            bsClass="modal-footer"
                            componentClass="div"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              disabled={false}
                            >
                              Close
                            </Button>
                          </ModalFooter>
                        </Modal>
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
                id="contained-modal-title"
              >
                Parabéns!!!
              </ModalTitle>
            </ModalHeader>
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            />
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
              >
                Close
              </Button>
            </ModalFooter>
          </Modal>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Modal
            animation={true}
            aria-labelledby="contained-modal-title"
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            container={
              SuccessModal {
                "context": Object {},
                "props": Object {},
                "refs": Object {},
                "setState": [Function],
                "state": null,
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_element": <SuccessModal />,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_newState": null,
                    "_rendered": <div>
                      <div
                        className="modal-container"
                        style={
                          Object {
                            "height": 200,
                          }
                        }
                      >
                        <Modal
                          animation={true}
                          aria-labelledby="contained-modal-title"
                          autoFocus={true}
                          backdrop={true}
                          bsClass="modal"
                          container={[Circular]}
                          dialogComponentClass={[Function]}
                          enforceFocus={true}
                          keyboard={true}
                          manager={
                            ModalManager {
                              "add": [Function],
                              "containers": Array [],
                              "data": Array [],
                              "handleContainerOverflow": true,
                              "hideSiblingNodes": true,
                              "isTopModal": [Function],
                              "modals": Array [],
                              "remove": [Function],
                            }
                          }
                          onHide={[Function]}
                          renderBackdrop={[Function]}
                          restoreFocus={true}
                          show={false}
                        >
                          <ModalHeader
                            bsClass="modal-header"
                            closeButton={true}
                            closeLabel="Close"
                          >
                            <ModalTitle
                              bsClass="modal-title"
                              componentClass="h4"
                              id="contained-modal-title"
                            >
                              Parabéns!!!
                            </ModalTitle>
                          </ModalHeader>
                          <ModalBody
                            bsClass="modal-body"
                            componentClass="div"
                          />
                          <ModalFooter
                            bsClass="modal-footer"
                            componentClass="div"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              disabled={false}
                            >
                              Close
                            </Button>
                          </ModalFooter>
                        </Modal>
                      </div>
                    </div>,
                    "_rendering": false,
                    "_updater": [Circular],
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              }
            }
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
                id="contained-modal-title"
              >
                Parabéns!!!
              </ModalTitle>
            </ModalHeader>
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            />
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
              >
                Close
              </Button>
            </ModalFooter>
          </Modal>,
          "className": "modal-container",
          "style": Object {
            "height": 200,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animation": true,
            "aria-labelledby": "contained-modal-title",
            "autoFocus": true,
            "backdrop": true,
            "bsClass": "modal",
            "children": Array [
              <ModalHeader
                bsClass="modal-header"
                closeButton={true}
                closeLabel="Close"
              >
                <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                  id="contained-modal-title"
                >
                  Parabéns!!!
                </ModalTitle>
              </ModalHeader>,
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
              />,
              <ModalFooter
                bsClass="modal-footer"
                componentClass="div"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                >
                  Close
                </Button>
              </ModalFooter>,
            ],
            "container": SuccessModal {
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "setState": [Function],
              "state": null,
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_element": <SuccessModal />,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_newState": null,
                  "_rendered": <div>
                    <div
                      className="modal-container"
                      style={
                        Object {
                          "height": 200,
                        }
                      }
                    >
                      <Modal
                        animation={true}
                        aria-labelledby="contained-modal-title"
                        autoFocus={true}
                        backdrop={true}
                        bsClass="modal"
                        container={[Circular]}
                        dialogComponentClass={[Function]}
                        enforceFocus={true}
                        keyboard={true}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onHide={[Function]}
                        renderBackdrop={[Function]}
                        restoreFocus={true}
                        show={false}
                      >
                        <ModalHeader
                          bsClass="modal-header"
                          closeButton={true}
                          closeLabel="Close"
                        >
                          <ModalTitle
                            bsClass="modal-title"
                            componentClass="h4"
                            id="contained-modal-title"
                          >
                            Parabéns!!!
                          </ModalTitle>
                        </ModalHeader>
                        <ModalBody
                          bsClass="modal-body"
                          componentClass="div"
                        />
                        <ModalFooter
                          bsClass="modal-footer"
                          componentClass="div"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            disabled={false}
                          >
                            Close
                          </Button>
                        </ModalFooter>
                      </Modal>
                    </div>
                  </div>,
                  "_rendering": false,
                  "_updater": [Circular],
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "dialogComponentClass": [Function],
            "enforceFocus": true,
            "keyboard": true,
            "manager": ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            },
            "onHide": [Function],
            "renderBackdrop": [Function],
            "restoreFocus": true,
            "show": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-header",
                "children": <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                  id="contained-modal-title"
                >
                  Parabéns!!!
                </ModalTitle>,
                "closeButton": true,
                "closeLabel": "Close",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "modal-title",
                  "children": "Parabéns!!!",
                  "componentClass": "h4",
                  "id": "contained-modal-title",
                },
                "ref": null,
                "rendered": "Parabéns!!!",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-body",
                "children": undefined,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-footer",
                "children": <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  disabled={false}
                >
                  Close
                </Button>,
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Close",
                  "disabled": false,
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": "Close",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
